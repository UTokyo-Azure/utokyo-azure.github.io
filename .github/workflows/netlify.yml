name: Build and Deploy to Netlify

on:
  pull_request:
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Pull request number to deploy'
        required: true

jobs:
  pr_number:
    runs-on: ubuntu-latest
    if: >-
      ${{
        github.event_name == 'pull_request' ||
        (github.event_name == 'issue_comment' && github.event.issue.pull_request) ||
        github.event_name == 'workflow_dispatch'
      }}
    outputs:
      pr_number: ${{ steps.set_pr_number.outputs.pr_number }}
    steps:
      - name: Determine Pull Request Number
        id: set_pr_number
        run: |
          PR_NUMBER=""
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            PR_NUMBER="${{ github.event.pull_request.number }}"
            echo "Triggered by pull request: $PR_NUMBER"
          elif [ "${{ github.event_name }}" == "issue_comment" ]; then
            echo "Triggered by issue comment: ${{ github.event.comment.body }} on issue #${{ github.event.issue.number }}"
            if [[ "${{ github.event.comment.body }}" =~ ^/deploy-preview$ ]]; then
              PR_NUMBER="${{ github.event.issue.number }}"
            else
              echo "No deploy-preview command found in comment."
            fi
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            PR_NUMBER="${{ github.event.inputs.pr_number }}"
            echo "Triggered by workflow dispatch with input: $PR_NUMBER"
          fi

          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: pr_number
    if: ${{ needs.pr_number.outputs.pr_number != '' }}
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: refs/pull/${{ needs.pr_number.outputs.pr_number }}/merge

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Setup node_modules Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install
        run: |
          npm install
      - name: Build
        run: |
          npm run build
      - name: Check unused assets
        run: |
          npm run unused-asset
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: dist
          production-branch: master
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Preview for #${{ needs.pr_number.outputs.pr_number }}"
          enable-pull-request-comment: true
          overwrites-pull-request-comment: true
          enable-commit-comment: false
          enable-github-deployment: false
          alias: deploy-preview-${{ needs.pr_number.outputs.pr_number }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 10
